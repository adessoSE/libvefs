include:
  - project: '${MDC_CI_JOB_TEMPLATES_PREFIX}templates/ci-job-templates'
    ref: master
    file: 'global-vars.yml'

variables:
  VCPKG_DEFAULT_BINARY_CACHE: C:\cache\vcpkg\archives
  VCPKG_DOWNLOADS: C:\cache\vcpkg\downloads

image: ${DOCKER_REGISTRY_INTERN}/de.mdk.bs/ci-win-native:latest
stages:
- build
- test
- upload

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH !~ /^wip/'


########################################################################
# test template
.test: &test
  stage: test
  tags:
    - windows-docker


########################################################################
# build jobs
build:
  stage: build
  tags:
    - windows-docker
  before_script:
    - '& "$env:VS_BUILD_TOOLS_ROOT\Common7\Tools\Launch-VsDevShell.ps1" -VsInstallationPath "$env:VS_BUILD_TOOLS_ROOT" -Arch amd64 -HostArch amd64 *>$null'
    - mkdir -Force $env:VCPKG_DEFAULT_BINARY_CACHE,$env:VCPKG_DOWNLOADS *> $null
    # fail on warnings if not building CI tags
    - $WARNINGS_AS_ERRORS = If ($env:CI_COMMIT_TAG -eq $null) {"ON"} Else {"OFF"}
  script:
    - cmake --preset "x64-windows-msvc" -DWARNINGS_AS_ERRORS=$WARNINGS_AS_ERRORS
    - cmake --build --preset "x64-windows-msvc" --config Debug
    - cmake --build --preset "x64-windows-msvc" --config RelWithDebInfo
  artifacts:
    paths:
      - build/x64-windows-msvc/apps/Debug
      - build/x64-windows-msvc/apps/RelWithDebInfo
      - build/x64-windows-msvc/Debug
      - build/x64-windows-msvc/RelWithDebInfo
    expire_in: 1 week
    expose_as: binaries

# test jobs
test:debug:
  <<: *test
  script:
    - build\x64-windows-msvc\Debug\vefs-tests

test:release:
  <<: *test
  script:
    - build\x64-windows-msvc\RelWithDebInfo\vefs-tests

release:dev_tools:
  stage: upload
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
  tags:
    - windows-docker
  script:
    - Invoke-WebRequest -Infile "build/x64-windows-msvc/apps/RelWithDebInfo/vefs.exe" -Method PUT -Uri "$env:ARTIFACTORY_URL/$env:ARTIFACTORY_REPO_STAGE_GENERIC/dev-tools/vefs/vefs-cli.exe" -Headers @{'X-JFrog-Art-Api'=$env:ARTIFACTORY_TOKEN}
